/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/behaviors.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
            quick-tap-ms = <200>;
        };
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };
        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ' | 
// |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | , | . | / |
// | MO(1) | MT(LSHIFT, Backspace) | ESC |     | MT(RCTRL, Enter) | SPACE  | MO(2) |
                        display-name = "Base";
                        bindings = <
   &kp Q  &kp W  &kp E  &kp R  &kp T           &kp Y    &kp U   &kp I       &kp O     &kp P 
   &kp A  &kp S  &kp D  &kp F  &kp G           &kp H    &kp J   &kp K       &kp L     &kp SQT 
   &kp Z  &kp X  &kp C  &kp V  &kp B           &kp N    &kp M   &kp COMMA   &kp DOT    &kp SLASH 
            &mo 1 &mt LSHIFT DEL &kp ESC      &mt RCTRL RET  &kp SPACE   &mo 2
                        >;
                };

                first_layer {
// -----------------------------------------------------------------------------------------
// | 1     |  2  |  3  |  4  |  5  |            |  HOME  |  PageDown  |  PageUp  |  END  |  ToggleUg  |
// | LSHIFT   | LALT | LCTRL | LGUI | TAB |     | LFT | DWN |  UP | RGT |  MODE >  |
// | TL(4) | NONE | NONE | DEL | NONE           | NONE | NONE |  BRIGHT_DOWN | BRIGHT_UP | MODE <  |
// | TRANS | TRANS | TRANS |                    | TRANS | TRANS | MO(3) |
                        display-name = "First";
                        bindings = <
   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                     &kp HOME  &kp PG_DN   &kp PG_UP  &kp END     &none
   &kp LSHIFT  &kp LALT  &kp LCTRL  &kp LGUI   &kp TAB       &kp LEFT  &kp DOWN    &kp UP     &kp RIGHT   &none
   &tog_on 4 &none  &none  &kp C_AC_DEL   &none                  &none    &none      &kp C_BRI_DN    &kp C_BRI_UP     &none
                         &trans     &trans       &trans        &trans   &trans   &mo 3
                        >;
                };

                second_layer {
// -----------------------------------------------------------------------------------------
// | ! |  @ |  # |  $ |  % |           |  ^ |  & |  * |  (  |  )  |
// | `~ |  \| |  [  |  ] |  TAB  |     |  ~  |  RGUI  | RCTRL| RALT | RSHIFT |
// | CAPS |  _  |  -  |  +  |  =  |     |  :  |  ;  |  {  |  }   |  |  |
// | MO(3) | TRANS | TRANS |                    | TRANS | TRANS | TRANS |
                        display-name = "Second";
                        bindings = <

   &kp EXCL   &kp AT   &kp HASH   &kp DOLLAR   &kp PERCENT           &kp CARET  &kp AMPS   &kp STAR  &kp LPAR   &kp RPAR 
   &kp GRAVE   &kp BACKSLASH   &kp LBKT   &kp RBKT   &kp TAB           &kp TILDE  &kp RGUI   &kp RCTRL  &kp RALT   &kp RSHIFT 
   &kp CAPS   &kp UNDER   &kp MINUS   &kp PLUS   &kp EQUAL           &kp COLON  &kp SEMICOLON   &kp LBRC  &kp RBRC   &kp PIPE 
                         &mo 3     &trans       &trans        &trans   &trans   &trans
                        >;
                };

                third_layer {
// -----------------------------------------------------------------------------------------
// | 1 |  2 |  3 |  4 |  5 |                    |  6 |  7 |  8 |  9  |  0  |
// | LSHIFT   | LALT | LCTRL | LGUI | F11 |     | F12 |  RGUI  | RCTRL| RALT | RSHIFT |
// | F1   | F2 | F3 | F4 | F5 |                 | F6 |  F7  | F8  | F9 | F10 |
// | MO(3) | TRANS | TRANS |                    | TRANS | TRANS | TRANS |
                        display-name = "Third";
                        bindings = <

   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                &kp N6   &kp N7   &kp N8   &kp N9   &kp N0 
   &kp LSHIFT  &kp LALT  &kp LCTRL  &kp LGUI   &kp F11       &kp F12  &kp RGUI   &kp RCTRL  &kp RALT   &kp RSHIFT 
   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                &kp F6  &kp F7   &kp F8  &kp F9   &kp F10 
                 &trans   &trans   &trans               &trans   &trans   &trans
                        >;
                };

                fourth_layer {
                        display-name = "Fourth";
                        bindings = <

   &none  &none  &kp LC(LS(LG(N4)))  &kp LS(LG(N4))  &kp LS(LG(N5))      &none  &none     &msc SCRL_LEFT  &msc SCRL_RIGHT   &msc SCRL_UP 
   &bt BT_NXT  &bt BT_PRV  &bt BT_CLR  &none  &none         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT   &msc SCRL_DOWN 
   &none  &none  &none  &none  &none                                  &none  &kp C_MUTE   &kp C_VOL_DN   &kp C_VOL_UP   &none 
                 &trans   &trans   &tog_off 4               &mkp LCLK   &mkp RCLK   &mkp MCLK
                        >;
                };

        };
};
